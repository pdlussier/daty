cp	page.py	/^from copy import deepcopy as cp$/;"	x
sf	page.py	/^from gi.repository.GObject import SignalFlags as sf$/;"	x
Page	page.py	/^class Page(ScrolledWindow):$/;"	c
__gtype_name__	page.py	/^    __gtype_name__ = "Page"$/;"	v	class:Page	file:
__gsignals__	page.py	/^    __gsignals__ = {'claim-changed':(sf.RUN_LAST,$/;"	v	class:Page	file:
image	page.py	/^    image = Template.Child("image")$/;"	v	class:Page
statements	page.py	/^    statements = Template.Child("statements")$/;"	v	class:Page
references_toggled	page.py	/^    references_toggled = 1$/;"	v	class:Page
__init__	page.py	/^    def __init__(self, entity, *args, new=False, **kwargs):$/;"	m	class:Page
reference_toggled_cb	page.py	/^    def reference_toggled_cb(self, values, state, frame):$/;"	m	class:Page
statement_add_clicked_cb	page.py	/^    def statement_add_clicked_cb(self, widget):$/;"	m	class:Page
load_property	page.py	/^    def load_property(self, URI, prop, error, i):$/;"	m	class:Page
property_value_new_clicked_cb	page.py	/^    def property_value_new_clicked_cb(self, property, original_position):$/;"	m	class:Page
get_top	page.py	/^        get_top = lambda x: self.statements.child_get_property(x, 'top-attach')$/;"	f	member:Page.property_value_new_clicked_cb	file:
load_value_async	page.py	/^    def load_value_async(self, claim, values):$/;"	m	class:Page
do_call	page.py	/^        def do_call():$/;"	f	member:Page.load_value_async	file:
on_value_complete	page.py	/^    def on_value_complete(self, claim, values, error):$/;"	m	class:Page
reference_new_clicked_cb	page.py	/^    def reference_new_clicked_cb(self, value, entity):$/;"	m	class:Page
entity_leaving_cb	page.py	/^    def entity_leaving_cb(self, value, entity):$/;"	m	class:Page
entity_editing_cb	page.py	/^    def entity_editing_cb(self, value, entity, popover):$/;"	m	class:Page
button_press_event_cb	page.py	/^    def button_press_event_cb(self, widget, event, entity, popover):$/;"	m	class:Page
claim_changed_cb	page.py	/^    def claim_changed_cb(self, value, claim, target):$/;"	m	class:Page
new_window_clicked_cb	page.py	/^    def new_window_clicked_cb(self, value, entity):$/;"	m	class:Page
cp	entity.py	/^from copy import deepcopy as cp$/;"	x
sf	entity.py	/^from gi.repository.GObject import SignalFlags as sf$/;"	x
Entity	entity.py	/^class Entity(Stack):$/;"	c
__gtype_name__	entity.py	/^    __gtype_name__ = "Entity"$/;"	v	class:Entity	file:
__gsignals__	entity.py	/^    __gsignals__ = {'entity-editing':(sf.RUN_LAST,$/;"	v	class:Entity	file:
entry	entity.py	/^    entry = Template.Child("entry")$/;"	v	class:Entity
label	entity.py	/^    label = Template.Child("label")$/;"	v	class:Entity
value_eventbox	entity.py	/^    value_eventbox = Template.Child("value_eventbox")$/;"	v	class:Entity
unit	entity.py	/^    unit = Template.Child("unit")$/;"	v	class:Entity
__init__	entity.py	/^    def __init__(self, snak=None, new=False, qualifier=False, css=None, **kwargs):$/;"	m	class:Entity
item_new	entity.py	/^            item_new = lambda Q: {'snaktype':'value',$/;"	f	member:Entity.__init__	file:
read	entity.py	/^    def read(self, snak):$/;"	m	class:Entity
set_text	entity.py	/^    def set_text(self, label, description):$/;"	m	class:Entity
on_download_unit	entity.py	/^    def on_download_unit(self, URI, unit, error):$/;"	m	class:Entity
load_entity	entity.py	/^    def load_entity(self, URI, entity, error):$/;"	m	class:Entity
button_press_event_cb	entity.py	/^    def button_press_event_cb(self, widget, event):$/;"	m	class:Entity
entry_changed_cb	entity.py	/^    def entry_changed_cb(self, entry):$/;"	m	class:Entity
entry_icon_press_cb	entity.py	/^    def entry_icon_press_cb(self, entry, icon_pos, event):$/;"	m	class:Entity
entry_focus_in_event_cb	entity.py	/^    def entry_focus_in_event_cb(self, entry, event):$/;"	m	class:Entity
object_selected_cb	entity.py	/^    def object_selected_cb(self, popover, entity):$/;"	m	class:Entity
new_window_clicked_cb	entity.py	/^    def new_window_clicked_cb(self, popover, entities):$/;"	m	class:Entity
entry_focus_out_event_cb	entity.py	/^    def entry_focus_out_event_cb(self, widget, event):$/;"	m	class:Entity
entry_key_release_event_cb	entity.py	/^    def entry_key_release_event_cb(self, widget, event):$/;"	m	class:Entity
gtk_main	__init__.py	/^from gi.repository.Gtk import main as gtk_main$/;"	x
name	__init__.py	/^name = "ml.prevete.Daty"$/;"	v
version	__init__.py	/^version = "1.0rc"$/;"	v
main	__init__.py	/^def main():$/;"	f
AboutDaty	aboutdaty.py	/^class AboutDaty(AboutDialog):$/;"	c
__gtype_name__	aboutdaty.py	/^    __gtype_name__ = "AboutDaty"$/;"	v	class:AboutDaty	file:
__init__	aboutdaty.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:AboutDaty
name	application.py	/^name = "ml.prevete.Daty"$/;"	v
Daty	application.py	/^class Daty(Application):$/;"	c
__init__	application.py	/^    def __init__(self, *args, new_session=True, entities=[], **kwargs):$/;"	m	class:Daty
do_startup	application.py	/^    def do_startup(self):$/;"	m	class:Daty
do_activate	application.py	/^    def do_activate(self, new_session=True, **kwargs):$/;"	m	class:Daty
do_command_line	application.py	/^    def do_command_line(self, command_line):$/;"	m	class:Daty
on_entity_close	application.py	/^    def on_entity_close(self, action, param):$/;"	m	class:Daty
on_help	application.py	/^    def on_help(self, action, param):$/;"	m	class:Daty
on_preferences	application.py	/^    def on_preferences(self, action, param):$/;"	m	class:Daty
on_shortcuts	application.py	/^    def on_shortcuts(self, action, param):$/;"	m	class:Daty
on_about	application.py	/^    def on_about(self, action, param):$/;"	m	class:Daty
on_preferences	application.py	/^    def on_preferences(self, action, param):$/;"	m	class:Daty
on_quit	application.py	/^    def on_quit(self, action, param):$/;"	m	class:Daty
app	application.py	/^    app = Daty()$/;"	v
rm	config.py	/^from shutil import rmtree as rm$/;"	x
Config	config.py	/^class Config:$/;"	c
exec_path	config.py	/^    exec_path = dirname(abspath(__file__))$/;"	v	class:Config
appname	config.py	/^    appname = "daty"$/;"	v	class:Config
appauthor	config.py	/^    appauthor = "Pellegrino Prevete"$/;"	v	class:Config
dirs	config.py	/^    dirs = {'data':user_data_dir(appname, appauthor),$/;"	v	class:Config
mobile	config.py	/^    mobile = False$/;"	v	class:Config
verbose	config.py	/^    verbose = True$/;"	v	class:Config
__init__	config.py	/^    def __init__(self):$/;"	m	class:Config
set_dirs	config.py	/^    def set_dirs(self):$/;"	m	class:Config
set_locales	config.py	/^    def set_locales(self):$/;"	m	class:Config
create_pywikibot_config	config.py	/^    def create_pywikibot_config(self, user, bot_user, bot_password):$/;"	m	class:Config
save	config.py	/^    def save(self):$/;"	m	class:Config
set_resources	config.py	/^    def set_resources(self):$/;"	m	class:Config
cp	editor.py	/^from copy import deepcopy as cp$/;"	x
sf	editor.py	/^from gi.repository.GObject import SignalFlags as sf$/;"	x
browser_open	editor.py	/^from webbrowser import open as browser_open$/;"	x
name	editor.py	/^name = "ml.prevete.Daty"$/;"	v
modifiers	editor.py	/^modifiers = [KEY_Control_L, KEY_Control_R, KEY_Alt_R, KEY_Alt_L,$/;"	v
Editor	editor.py	/^class Editor(ApplicationWindow):$/;"	c
__gtype_name__	editor.py	/^    __gtype_name__ = "Editor"$/;"	v	class:Editor	file:
__gsignals__	editor.py	/^    __gsignals__ = {'entity-close':(sf.RUN_LAST,$/;"	v	class:Editor	file:
titlebar	editor.py	/^    titlebar = Template.Child("titlebar")$/;"	v	class:Editor
header_box	editor.py	/^    header_box = Template.Child("header_box")$/;"	v	class:Editor
header_bar	editor.py	/^    header_bar = Template.Child("header_bar")$/;"	v	class:Editor
entity_close	editor.py	/^    entity_close = Template.Child("entity_close")$/;"	v	class:Editor
entity_discussion_open_external	editor.py	/^    entity_discussion_open_external = Template.Child("entity_discussion_open_external")$/;"	v	class:Editor
entity_history_open_external	editor.py	/^    entity_history_open_external = Template.Child("entity_history_open_external")$/;"	v	class:Editor
entity_open	editor.py	/^    entity_open = Template.Child("entity_open")$/;"	v	class:Editor
entity_menu_popover	editor.py	/^    entity_menu_popover = Template.Child("entity_menu_popover")$/;"	v	class:Editor
entities_search	editor.py	/^    entities_search = Template.Child("entities_search")$/;"	v	class:Editor
entities_select	editor.py	/^    entities_select = Template.Child("entities_select")$/;"	v	class:Editor
entity_open_external	editor.py	/^    entity_open_external = Template.Child("entity_open_external")$/;"	v	class:Editor
cancel_entities_selection	editor.py	/^    cancel_entities_selection = Template.Child("cancel_entities_selection")$/;"	v	class:Editor
app_menu	editor.py	/^    app_menu = Template.Child("app_menu")$/;"	v	class:Editor
app_menu_popover	editor.py	/^    app_menu_popover = Template.Child("app_menu_popover")$/;"	v	class:Editor
help	editor.py	/^    help = Template.Child("help")$/;"	v	class:Editor
sub_header_bar	editor.py	/^    sub_header_bar = Template.Child("sub_header_bar")$/;"	v	class:Editor
entity_back	editor.py	/^    entity_back = Template.Child("entity_back")$/;"	v	class:Editor
entity_stack	editor.py	/^    entity_stack = Template.Child("entity_stack")$/;"	v	class:Editor
entity_button	editor.py	/^    entity_button = Template.Child("entity_button")$/;"	v	class:Editor
entity	editor.py	/^    entity = Template.Child("entity")$/;"	v	class:Editor
description	editor.py	/^    description = Template.Child("description")$/;"	v	class:Editor
entity_search	editor.py	/^    entity_search = Template.Child("entity_search")$/;"	v	class:Editor
sidebar	editor.py	/^    sidebar = Template.Child("sidebar")$/;"	v	class:Editor
sidebar_search_bar	editor.py	/^    sidebar_search_bar = Template.Child("sidebar_search_bar")$/;"	v	class:Editor
sidebar_search_entry	editor.py	/^    sidebar_search_entry = Template.Child("sidebar_search_entry")$/;"	v	class:Editor
sidebar_viewport	editor.py	/^    sidebar_viewport = Template.Child("sidebar_viewport")$/;"	v	class:Editor
content_box	editor.py	/^    content_box = Template.Child("content_box")$/;"	v	class:Editor
content_stack	editor.py	/^    content_stack = Template.Child("content_stack")$/;"	v	class:Editor
single_column	editor.py	/^    single_column = Template.Child("single_column")$/;"	v	class:Editor
entity_search_bar	editor.py	/^    entity_search_bar = Template.Child("entity_search_bar")$/;"	v	class:Editor
entity_search_entry	editor.py	/^    entity_search_entry = Template.Child("entity_search_entry")$/;"	v	class:Editor
pages	editor.py	/^    pages = Template.Child("pages")$/;"	v	class:Editor
start_pane_size_group	editor.py	/^    start_pane_size_group = Template.Child("start_pane_size_group")$/;"	v	class:Editor
wikidata	editor.py	/^    wikidata = Wikidata()$/;"	v	class:Editor
__init__	editor.py	/^    def __init__(self, *args, entities=[], quit_cb=None, max_pages=10, **kwargs):$/;"	m	class:Editor
icon	editor.py	/^        icon = lambda x: IconTheme.get_default().load_icon((name), x, 0)$/;"	f	member:Editor.__init__	file:
filter	editor.py	/^    def filter(self, query, text):$/;"	m	class:Editor
sidebar_search_entry_search_changed_cb	editor.py	/^    def sidebar_search_entry_search_changed_cb(self, entry):$/;"	m	class:Editor
sidebar_row_selected_cb	editor.py	/^    def sidebar_row_selected_cb(self, sidebar_list, entity):$/;"	m	class:Editor
set_text	editor.py	/^        def set_text(widget, label):$/;"	f	member:Editor.sidebar_row_selected_cb	file:
load_page_async	editor.py	/^    def load_page_async(self, entity):$/;"	m	class:Editor
do_call	editor.py	/^        def do_call():$/;"	f	member:Editor.load_page_async	file:
on_page_complete	editor.py	/^    def on_page_complete(self, entity):$/;"	m	class:Editor
value_disable_signals	editor.py	/^    def value_disable_signals(self, page, value, entity):$/;"	m	class:Editor
reference_new_clicked_cb	editor.py	/^    def reference_new_clicked_cb(self, page, value, entity):$/;"	m	class:Editor
from_value_object_new_enter_notify_event_cb	editor.py	/^    def from_value_object_new_enter_notify_event_cb(self, qualifier_new, event, page, value, ent/;"	m	class:Editor
from_value_object_new_leave_notify_event_cb	editor.py	/^    def from_value_object_new_leave_notify_event_cb(self, actions, event, page, value, entity):$/;"	m	class:Editor
reference_new_button_press_event_elsewhere	editor.py	/^    def reference_new_button_press_event_elsewhere(self, page, event, value, entity):$/;"	m	class:Editor
entity_leaving_cb	editor.py	/^    def entity_leaving_cb(self, page, value, entity):$/;"	m	class:Editor
entity_editing_cb	editor.py	/^    def entity_editing_cb(self, page, value, entity, popover):$/;"	m	class:Editor
object_new_enter_notify_event_cb	editor.py	/^    def object_new_enter_notify_event_cb(self, object_new, event, page, value):$/;"	m	class:Editor
object_new_leave_notify_event_cb	editor.py	/^    def object_new_leave_notify_event_cb(self, actions, event, page, value, entity):$/;"	m	class:Editor
button_press_event_cb	editor.py	/^    def button_press_event_cb(self, page, event, value, entity):$/;"	m	class:Editor
claim_changed_cb	editor.py	/^    def claim_changed_cb(self, page, claim, target, value):$/;"	m	class:Editor
on_claim_changed	editor.py	/^    def on_claim_changed(self, target, error, value):$/;"	m	class:Editor
entity_search_entry_search_changed_cb	editor.py	/^    def entity_search_entry_search_changed_cb(self, entry):$/;"	m	class:Editor
row	editor.py	/^        row = lambda i,j: statements.get_child_at(j,i)$/;"	f	member:Editor.entity_search_entry_search_changed_cb	file:
load	editor.py	/^    def load(self, entities):$/;"	m	class:Editor
load_row_async	editor.py	/^    def load_row_async(self, entity, **kwargs):$/;"	m	class:Editor
f	editor.py	/^        f = lambda : entity$/;"	f	member:Editor.load_row_async	file:
do_call	editor.py	/^        def do_call():$/;"	f	member:Editor.load_row_async	file:
on_row_complete	editor.py	/^    def on_row_complete(self, entity, **kwargs):$/;"	m	class:Editor
entity_open_clicked_cb	editor.py	/^    def entity_open_clicked_cb(self, widget):$/;"	m	class:Editor
new_window_clicked_cb	editor.py	/^    def new_window_clicked_cb(self, dialog, entities):$/;"	m	class:Editor
open_window_new_clicked_cb	editor.py	/^    def open_window_new_clicked_cb(self, dialog, good):$/;"	m	class:Editor
entity_new_clicked_cb	editor.py	/^    def entity_new_clicked_cb(self, open, query):$/;"	m	class:Editor
entity_history_open_external_clicked_cb	editor.py	/^    def entity_history_open_external_clicked_cb(self, widget, URI):$/;"	m	class:Editor
entity_discussion_open_external_clicked_cb	editor.py	/^    def entity_discussion_open_external_clicked_cb(self, widget, URI):$/;"	m	class:Editor
entity_open_external_clicked_cb	editor.py	/^    def entity_open_external_clicked_cb(self, widget, URI):$/;"	m	class:Editor
entities_search_toggled_cb	editor.py	/^    def entities_search_toggled_cb(self, widget):$/;"	m	class:Editor
entities_select_clicked_cb	editor.py	/^    def entities_select_clicked_cb(self, widget):$/;"	m	class:Editor
cancel_entities_selection_clicked_cb	editor.py	/^    def cancel_entities_selection_clicked_cb(self, widget):$/;"	m	class:Editor
set_selection_mode	editor.py	/^    def set_selection_mode(self, value):$/;"	m	class:Editor
app_menu_clicked_cb	editor.py	/^    def app_menu_clicked_cb(self, widget):$/;"	m	class:Editor
entity_menu_clicked_cb	editor.py	/^    def entity_menu_clicked_cb(self, widget):$/;"	m	class:Editor
on_content_box_folded_changed	editor.py	/^    def on_content_box_folded_changed(self, leaflet, folded):$/;"	m	class:Editor
on_single_column_folded_changed	editor.py	/^    def on_single_column_folded_changed(self, leaflet, folded):$/;"	m	class:Editor
entity_back_clicked_cb	editor.py	/^    def entity_back_clicked_cb(self, widget):$/;"	m	class:Editor
entity_search_toggled_cb	editor.py	/^    def entity_search_toggled_cb(self, widget):$/;"	m	class:Editor
key_press_event_cb	editor.py	/^    def key_press_event_cb(self, window, event):$/;"	m	class:Editor
entity_search_entry_stop_search_cb	editor.py	/^    def entity_search_entry_stop_search_cb(self, widget):$/;"	m	class:Editor
entity_close_clicked_cb	editor.py	/^    def entity_close_clicked_cb(self, widget, sidebar_entity):$/;"	m	class:Editor
get_neighbor	editor.py	/^    def get_neighbor(self, i, next=True):$/;"	m	class:Editor
f	editor.py	/^        f = lambda x: x + 1 if next else x - 1$/;"	f	member:Editor.get_neighbor	file:
sf	entitypopover.py	/^from gi.repository.GObject import SignalFlags as sf$/;"	x
EntityPopover	entitypopover.py	/^class EntityPopover(PopoverMenu):$/;"	c
__gtype_name__	entitypopover.py	/^    __gtype_name__ = "EntityPopover"$/;"	v	class:EntityPopover	file:
__gsignals__	entitypopover.py	/^    __gsignals__ = {'default-variable-selected':(sf.RUN_LAST,$/;"	v	class:EntityPopover	file:
label	entitypopover.py	/^    label = Template.Child("label")$/;"	v	class:EntityPopover
description	entitypopover.py	/^    description = Template.Child("description")$/;"	v	class:EntityPopover
entity_grid	entitypopover.py	/^    entity_grid = Template.Child("entity_grid")$/;"	v	class:EntityPopover
entity_new	entitypopover.py	/^    entity_new = Template.Child("entity_new")$/;"	v	class:EntityPopover
new_window	entitypopover.py	/^    new_window = Template.Child("new_window")$/;"	v	class:EntityPopover
results	entitypopover.py	/^    results = Template.Child("results")$/;"	v	class:EntityPopover
results_frame	entitypopover.py	/^    results_frame = Template.Child("results_frame")$/;"	v	class:EntityPopover
results_listbox	entitypopover.py	/^    results_listbox = Template.Child("results_listbox")$/;"	v	class:EntityPopover
results_nope_query	entitypopover.py	/^    results_nope_query = Template.Child("results_nope_query")$/;"	v	class:EntityPopover
results_stack	entitypopover.py	/^    results_stack = Template.Child("results_stack")$/;"	v	class:EntityPopover
search_entry	entitypopover.py	/^    search_entry = Template.Child("search_entry")$/;"	v	class:EntityPopover
search_subtitle	entitypopover.py	/^    search_subtitle = Template.Child("search_subtitle")$/;"	v	class:EntityPopover
variable_grid	entitypopover.py	/^    variable_grid = Template.Child("variable_grid")$/;"	v	class:EntityPopover
variable_record	entitypopover.py	/^    variable_record = Template.Child("variable_record")$/;"	v	class:EntityPopover
variable_title	entitypopover.py	/^    variable_title = Template.Child("variable_title")$/;"	v	class:EntityPopover
variable_subtitle	entitypopover.py	/^    variable_subtitle = Template.Child("variable_subtitle")$/;"	v	class:EntityPopover
__init__	entitypopover.py	/^    def __init__(self, entity=None, variables=None, filters=[], **kwargs):$/;"	m	class:EntityPopover
on_title_got	entitypopover.py	/^    def on_title_got(self, url, title):$/;"	m	class:EntityPopover
search_entry_search_changed_cb	entitypopover.py	/^    def search_entry_search_changed_cb(self, entry):$/;"	m	class:EntityPopover
on_search_done	entitypopover.py	/^    def on_search_done(self, results, error, query, entry, *args, **kwargs):$/;"	m	class:EntityPopover
entity_new_clicked_cb	entitypopover.py	/^    def entity_new_clicked_cb(self, widget, query):$/;"	m	class:EntityPopover
variables_set_results	entitypopover.py	/^    def variables_set_results(self, listbox, query=""):$/;"	m	class:EntityPopover
delete_variable_clicked_cb	entitypopover.py	/^    def delete_variable_clicked_cb(self, widget, row, entity):$/;"	m	class:EntityPopover
set_search_placeholder	entitypopover.py	/^    def set_search_placeholder(self, value):$/;"	m	class:EntityPopover
new_window_clicked_cb	entitypopover.py	/^    def new_window_clicked_cb(self, widget, *cb_args):$/;"	m	class:EntityPopover
is_variable	entitypopover.py	/^    def is_variable(self, entity):$/;"	m	class:EntityPopover
is_default_variable	entitypopover.py	/^    def is_default_variable(self, entity):$/;"	m	class:EntityPopover
variable_set_default_clicked_cb	entitypopover.py	/^    def variable_set_default_clicked_cb(self, widget):$/;"	m	class:EntityPopover
variable_row_set_default_clicked_cb	entitypopover.py	/^    def variable_row_set_default_clicked_cb(self, widget, entity):$/;"	m	class:EntityPopover
variable_record_clicked_cb	entitypopover.py	/^    def variable_record_clicked_cb(self, widget):$/;"	m	class:EntityPopover
object_selected_cb	entitypopover.py	/^    def object_selected_cb(self, widget, entity):$/;"	m	class:EntityPopover
results_listbox_row_activated_cb	entitypopover.py	/^    def results_listbox_row_activated_cb(self, listbox, row):$/;"	m	class:EntityPopover
EntitySelectable	entityselectable.py	/^class EntitySelectable(CheckButton):$/;"	c
__gtype_name__	entityselectable.py	/^    __gtype_name__ = "EntitySelectable"$/;"	v	class:EntitySelectable	file:
widget	entityselectable.py	/^    widget = Template.Child("widget")$/;"	v	class:EntitySelectable
label	entityselectable.py	/^    label = Template.Child("label")$/;"	v	class:EntitySelectable
description	entityselectable.py	/^    description = Template.Child("description")$/;"	v	class:EntitySelectable
URI	entityselectable.py	/^    URI = Template.Child("URI")$/;"	v	class:EntitySelectable
__init__	entityselectable.py	/^    def __init__(self, entity, *args,$/;"	m	class:EntitySelectable
toggled_cb	entityselectable.py	/^    def toggled_cb(self, widget, selected, *args):$/;"	m	class:EntitySelectable
FiltersList	filterslist.py	/^class FiltersList(ListBox):$/;"	c
__gtype_name__	filterslist.py	/^    __gtype_name__ = "FiltersList"$/;"	v	class:FiltersList	file:
__init__	filterslist.py	/^    def __init__(self,$/;"	m	class:FiltersList
update_header	filterslist.py	/^    def update_header(self, row, before, *args):$/;"	m	class:FiltersList
add	filterslist.py	/^    def add(self, row, select=False):$/;"	m	class:FiltersList
name	languageadd.py	/^name = 'ml.prevete.Daty'$/;"	v
LanguageAdd	languageadd.py	/^class LanguageAdd(Window):$/;"	c
__gtype_name__	languageadd.py	/^    __gtype_name__ = "LanguageAdd"$/;"	v	class:LanguageAdd	file:
cancel	languageadd.py	/^    cancel = Template.Child("cancel")$/;"	v	class:LanguageAdd
select	languageadd.py	/^    select = Template.Child("select")$/;"	v	class:LanguageAdd
languages	languageadd.py	/^    languages = Template.Child("languages")$/;"	v	class:LanguageAdd
search_entry	languageadd.py	/^    search_entry = Template.Child("search_entry")$/;"	v	class:LanguageAdd
__init__	languageadd.py	/^    def __init__(self, languages, *args, **kwargs):$/;"	m	class:LanguageAdd
icon	languageadd.py	/^        icon = lambda x: IconTheme.get_default().load_icon((name), x, 0)$/;"	f	member:LanguageAdd.__init__	file:
cancel_clicked_cb	languageadd.py	/^    def cancel_clicked_cb(self, widget):$/;"	m	class:LanguageAdd
select_clicked_cb	languageadd.py	/^    def select_clicked_cb(self, widget):$/;"	m	class:LanguageAdd
search_entry_search_changed_cb	languageadd.py	/^    def search_entry_search_changed_cb(self, entry):$/;"	m	class:LanguageAdd
update_header	languageadd.py	/^    def update_header(self, row, before, *args):$/;"	m	class:LanguageAdd
LoadingPage	loadingpage.py	/^class LoadingPage(Image):$/;"	c
__gtype_name__	loadingpage.py	/^    __gtype_name__ = "LoadingPage"$/;"	v	class:LoadingPage	file:
__init__	loadingpage.py	/^    def __init__(self, *args, label="", **kwargs):$/;"	m	class:LoadingPage
cp	open.py	/^from copy import deepcopy as cp$/;"	x
sf	open.py	/^from gi.repository.GObject import SignalFlags as sf$/;"	x
re_search	open.py	/^from re import search as re_search$/;"	x
name	open.py	/^name = 'ml.prevete.Daty'$/;"	v
Open	open.py	/^class Open(Window):$/;"	c
__gtype_name__	open.py	/^    __gtype_name__ = "Open"$/;"	v	class:Open	file:
__gsignals__	open.py	/^    __gsignals__ = {'entity-new':(sf.RUN_LAST,$/;"	v	class:Open	file:
wikidata	open.py	/^    wikidata = Wikidata()$/;"	v	class:Open
app_menu	open.py	/^    app_menu = Template.Child("app_menu")$/;"	v	class:Open
back	open.py	/^    back = Template.Child("back")$/;"	v	class:Open
bottom_bar	open.py	/^    bottom_bar = Template.Child("bottom_bar")$/;"	v	class:Open
header_bar	open.py	/^    header_bar = Template.Child("header_bar")$/;"	v	class:Open
cancel	open.py	/^    cancel = Template.Child("cancel")$/;"	v	class:Open
filters_box	open.py	/^    filters_box = Template.Child("filters_box")$/;"	v	class:Open
filters_viewport	open.py	/^    filters_viewport = Template.Child("filters_viewport")$/;"	v	class:Open
filter_new_box	open.py	/^    filter_new_box = Template.Child("filter_new_box")$/;"	v	class:Open
filters_subtitle	open.py	/^    filters_subtitle = Template.Child("filters_subtitle")$/;"	v	class:Open
help	open.py	/^    help = Template.Child("help")$/;"	v	class:Open
help_menu	open.py	/^    help_menu = Template.Child("help_menu")$/;"	v	class:Open
open_session	open.py	/^    open_session = Template.Child("open_session")$/;"	v	class:Open
page	open.py	/^    page = Template.Child("page")$/;"	v	class:Open
open_button	open.py	/^    open_button = Template.Child("open_button")$/;"	v	class:Open
results	open.py	/^    results = Template.Child("results")$/;"	v	class:Open
results_listbox	open.py	/^    results_listbox = Template.Child("results_listbox")$/;"	v	class:Open
results_nope_query	open.py	/^    results_nope_query = Template.Child("results_nope_query")$/;"	v	class:Open
results_number_box	open.py	/^    results_number_box = Template.Child("results_number_box")$/;"	v	class:Open
results_number	open.py	/^    results_number = Template.Child("results_number")$/;"	v	class:Open
select	open.py	/^    select = Template.Child("select")$/;"	v	class:Open
select_entities	open.py	/^    select_entities = Template.Child("select_entities")$/;"	v	class:Open
select_menu	open.py	/^    select_menu = Template.Child("select_menu")$/;"	v	class:Open
search_box	open.py	/^    search_box = Template.Child("search_box")$/;"	v	class:Open
search_entry	open.py	/^    search_entry = Template.Child("search_entry")$/;"	v	class:Open
subtitle	open.py	/^    subtitle = Template.Child("subtitle")$/;"	v	class:Open
title	open.py	/^    title = Template.Child("title")$/;"	v	class:Open
titlebar	open.py	/^    titlebar = Template.Child("titlebar")$/;"	v	class:Open
__init__	open.py	/^    def __init__(self, *args, new_session=True, quit_cb=None, verbose=False):$/;"	m	class:Open
icon	open.py	/^        icon = lambda x: IconTheme.get_default().load_icon((name), x, 0)$/;"	f	member:Open.__init__	file:
on_quit	open.py	/^    def on_quit(self, widget, event):$/;"	m	class:Open
set_search_placeholder	open.py	/^    def set_search_placeholder(self, value):$/;"	m	class:Open
open_button_clicked_cb	open.py	/^    def open_button_clicked_cb(self, widget):$/;"	m	class:Open
back_clicked_cb	open.py	/^    def back_clicked_cb(self, widget):$/;"	m	class:Open
app_menu_clicked_cb	open.py	/^    def app_menu_clicked_cb(self, widget):$/;"	m	class:Open
filters_help_clicked_cb	open.py	/^    def filters_help_clicked_cb(self, widget):$/;"	m	class:Open
help_clicked_cb	open.py	/^    def help_clicked_cb(self, widget):$/;"	m	class:Open
on_about	open.py	/^    def on_about(self, widget):$/;"	m	class:Open
filter_new_clicked_cb	open.py	/^    def filter_new_clicked_cb(self, widget):$/;"	m	class:Open
entity_new_clicked_cb	open.py	/^    def entity_new_clicked_cb(self, popover, query):$/;"	m	class:Open
new_window_clicked_cb	open.py	/^    def new_window_clicked_cb(self, triplet, entities):$/;"	m	class:Open
triplet_variable_deleted_cb	open.py	/^    def triplet_variable_deleted_cb(self, triplet, entity):$/;"	m	class:Open
object_delete	open.py	/^    def object_delete(self, triplet, object, entity):$/;"	m	class:Open
objects_foreach	open.py	/^    def objects_foreach(self, function, *args):$/;"	m	class:Open
triplet_delete	open.py	/^    def triplet_delete(self, widget, row):$/;"	m	class:Open
triplets_check_cb	open.py	/^    def triplets_check_cb(self, triplet, entity):$/;"	m	class:Open
on_download_done	open.py	/^    def on_download_done(self, URI, entity, error):$/;"	m	class:Open
on_select_done	open.py	/^    def on_select_done(self, results):$/;"	m	class:Open
object_is_empty	open.py	/^    def object_is_empty(self, triplet, object):$/;"	m	class:Open
is_default_variable_set	open.py	/^    def is_default_variable_set(self, triplet, object):$/;"	m	class:Open
object_is_default_variable	open.py	/^    def object_is_default_variable(self, triplet, object, entity):$/;"	m	class:Open
triplets_default_variable_selected_cb	open.py	/^    def triplets_default_variable_selected_cb(self, triplet, entity):$/;"	m	class:Open
key_press_event_cb	open.py	/^    def key_press_event_cb(self, widget, event):$/;"	m	class:Open
on_search_done	open.py	/^    def on_search_done(self, results, error, query):$/;"	m	class:Open
search_entry_search_changed_cb	open.py	/^    def search_entry_search_changed_cb(self, entry):$/;"	m	class:Open
search_entry_filters_search_changed_cb	open.py	/^    def search_entry_filters_search_changed_cb(self, entry):$/;"	m	class:Open
results_listbox_row_activated_cb	open.py	/^    def results_listbox_row_activated_cb(self, widget, row):$/;"	m	class:Open
set_selection_mode	open.py	/^    def set_selection_mode(self, value):$/;"	m	class:Open
set_row_selection	open.py	/^    def set_row_selection(self, row, value):$/;"	m	class:Open
select_clicked_cb	open.py	/^    def select_clicked_cb(self, widget):$/;"	m	class:Open
select_entities_clicked_cb	open.py	/^    def select_entities_clicked_cb(self, widget):$/;"	m	class:Open
select_all_clicked_cb	open.py	/^    def select_all_clicked_cb(self, widget):$/;"	m	class:Open
select_row	open.py	/^    def select_row(self, row, value):$/;"	m	class:Open
deselect_all_clicked_cb	open.py	/^    def deselect_all_clicked_cb(self, widget):$/;"	m	class:Open
window_new_clicked_cb	open.py	/^    def window_new_clicked_cb(self, widget):$/;"	m	class:Open
OverlayedListBoxRow	overlayedlistboxrow.py	/^class OverlayedListBoxRow(ListBoxRow):$/;"	c
__init__	overlayedlistboxrow.py	/^    def __init__(self, widget, top_widget=None, halign=Align.END, valign=Align.FILL):$/;"	m	class:OverlayedListBoxRow
add_widget	overlayedlistboxrow.py	/^    def add_widget(self, widget):$/;"	m	class:OverlayedListBoxRow
enter_notify_event_cb	overlayedlistboxrow.py	/^    def enter_notify_event_cb(self, widget, event):$/;"	m	class:OverlayedListBoxRow
leave_notify_event_cb	overlayedlistboxrow.py	/^    def leave_notify_event_cb(self, widget, event):$/;"	m	class:OverlayedListBoxRow
name	preferences.py	/^name = 'ml.prevete.Daty'$/;"	v
Preferences	preferences.py	/^class Preferences(Window):$/;"	c
__gtype_name__	preferences.py	/^    __gtype_name__ = "Preferences"$/;"	v	class:Preferences	file:
config	preferences.py	/^    config = Config()$/;"	v	class:Preferences
credentials	preferences.py	/^    credentials = Template.Child("credentials")$/;"	v	class:Preferences
languages	preferences.py	/^    languages = Template.Child("languages")$/;"	v	class:Preferences
__init__	preferences.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:Preferences
icon	preferences.py	/^        icon = lambda x: IconTheme.get_default().load_icon((name), x, 0)$/;"	f	member:Preferences.__init__	file:
language_new_clicked_cb	preferences.py	/^    def language_new_clicked_cb(self, widget):$/;"	m	class:Preferences
languages_callback	preferences.py	/^    def languages_callback(self, results):$/;"	m	class:Preferences
retrieve	preferences.py	/^    def retrieve(self, query, callback, *cb_args, **kwargs):$/;"	m	class:Preferences
do_call	preferences.py	/^        def do_call():$/;"	f	member:Preferences.retrieve	file:
update_header	preferences.py	/^    def update_header(self, row, before, *args):$/;"	m	class:Preferences
sf	property.py	/^from gi.repository.GObject import SignalFlags as sf$/;"	x
Property	property.py	/^class Property(Button):$/;"	c
__gtype_name__	property.py	/^    __gtype_name__ = "Property"$/;"	v	class:Property	file:
__gsignals__	property.py	/^    __gsignals__ = {'value-new':(sf.RUN_LAST,$/;"	v	class:Property	file:
property_label	property.py	/^    property_label = Template.Child("property_label")$/;"	v	class:Property
popover	property.py	/^    popover = Template.Child("popover")$/;"	v	class:Property
description	property.py	/^    description = Template.Child("description")$/;"	v	class:Property
__init__	property.py	/^    def __init__(self, prop, *args, **kwargs):$/;"	m	class:Property
set_label	property.py	/^    def set_label(self, label, tooltip):$/;"	m	class:Property
value_new_clicked_cb	property.py	/^    def value_new_clicked_cb(self, widget):$/;"	m	class:Property
clicked_cb	property.py	/^    def clicked_cb(self, widget):$/;"	m	class:Property
QualifierNewProperty	qualifier_new_property.py	/^class QualifierNewProperty(Entry):$/;"	c
__gtype_name__	qualifier_new_property.py	/^    __gtype_name__ = "QualifierNewProperty"$/;"	v	class:QualifierNewProperty	file:
__init__	qualifier_new_property.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:QualifierNewProperty
QualifierNewValue	qualifier_new_value.py	/^class QualifierNewValue(Button):$/;"	c
__gtype_name__	qualifier_new_value.py	/^    __gtype_name__ = "QualifierNewValue"$/;"	v	class:QualifierNewValue	file:
__init__	qualifier_new_value.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:QualifierNewValue
QualifierProperty	qualifierproperty.py	/^class QualifierProperty(EventBox):$/;"	c
__gtype_name__	qualifierproperty.py	/^    __gtype_name__ = "QualifierProperty"$/;"	v	class:QualifierProperty	file:
label	qualifierproperty.py	/^    label = Template.Child("label")$/;"	v	class:QualifierProperty
wikidata	qualifierproperty.py	/^    wikidata = Wikidata()$/;"	v	class:QualifierProperty
__init__	qualifierproperty.py	/^    def __init__(self, prop, *args, **kwargs):$/;"	m	class:QualifierProperty
set_label	qualifierproperty.py	/^    def set_label(self, label, tooltip):$/;"	m	class:QualifierProperty
Reference	reference.py	/^class Reference(Box):$/;"	c
__gtype_name__	reference.py	/^    __gtype_name__ = "Reference"$/;"	v	class:Reference	file:
actions	reference.py	/^    actions = Template.Child("actions")$/;"	v	class:Reference
grid	reference.py	/^    grid = Template.Child("grid")$/;"	v	class:Reference
__init__	reference.py	/^    def __init__(self, *args, new=False, **kwargs):$/;"	m	class:Reference
button_press_event_cb	reference.py	/^    def button_press_event_cb(self, widget, event):$/;"	m	class:Reference
RoundedButton	roundedbutton.py	/^class RoundedButton(Button):$/;"	c
__gtype_name__	roundedbutton.py	/^    __gtype_name__ = "RoundedButton"$/;"	v	class:RoundedButton	file:
image	roundedbutton.py	/^    image = Template.Child("image")$/;"	v	class:RoundedButton
__init__	roundedbutton.py	/^    def __init__(self, *args, image=None,$/;"	m	class:RoundedButton
SidebarEntity	sidebarentity.py	/^class SidebarEntity(EventBox):$/;"	c
__gtype_name__	sidebarentity.py	/^    __gtype_name__ = "SidebarEntity"$/;"	v	class:SidebarEntity	file:
box	sidebarentity.py	/^    box = Template.Child("box")$/;"	v	class:SidebarEntity
button	sidebarentity.py	/^    button = Template.Child("button")$/;"	v	class:SidebarEntity
button1	sidebarentity.py	/^    button1 = Template.Child("button1")$/;"	v	class:SidebarEntity
image_button	sidebarentity.py	/^    image_button = Template.Child("image_button")$/;"	v	class:SidebarEntity
image_button1	sidebarentity.py	/^    image_button1 = Template.Child("image_button1")$/;"	v	class:SidebarEntity
label	sidebarentity.py	/^    label = Template.Child("label")$/;"	v	class:SidebarEntity
description	sidebarentity.py	/^    description = Template.Child("description")$/;"	v	class:SidebarEntity
URI	sidebarentity.py	/^    URI = Template.Child("URI")$/;"	v	class:SidebarEntity
__init__	sidebarentity.py	/^    def __init__(self, entity, *args, description=True, URI=True, button=True,$/;"	m	class:SidebarEntity
enter_notify_event_cb	sidebarentity.py	/^    def enter_notify_event_cb(self, widget, event):$/;"	m	class:SidebarEntity
leave_notify_event_cb	sidebarentity.py	/^    def leave_notify_event_cb(self, widget, event):$/;"	m	class:SidebarEntity
button_leave_notify_event_cb	sidebarentity.py	/^    def button_leave_notify_event_cb(self, widget, event):$/;"	m	class:SidebarEntity
cp	sidebarlist.py	/^from copy import deepcopy as cp$/;"	x
sf	sidebarlist.py	/^from gi.repository.GObject import SignalFlags as sf$/;"	x
SidebarList	sidebarlist.py	/^class SidebarList(ListBox):$/;"	c
__gtype_name__	sidebarlist.py	/^    __gtype_name__ = "SidebarList"$/;"	v	class:SidebarList	file:
__gsignals__	sidebarlist.py	/^    __gsignals__ = {'entity-selected':(sf.RUN_LAST,$/;"	v	class:SidebarList	file:
__init__	sidebarlist.py	/^    def __init__(self,$/;"	m	class:SidebarList
update_header	sidebarlist.py	/^    def update_header(self, row, before, *args):$/;"	m	class:SidebarList
set_selection_mode	sidebarlist.py	/^    def set_selection_mode(self, value):$/;"	m	class:SidebarList
set_checkbutton	sidebarlist.py	/^    def set_checkbutton(self, row, value):$/;"	m	class:SidebarList
add	sidebarlist.py	/^    def add(self, row, select=False):$/;"	m	class:SidebarList
sidebar_row_selected_cb	sidebarlist.py	/^    def sidebar_row_selected_cb(self, listbox, row):$/;"	m	class:SidebarList
Statements	statements.py	/^class Statements(TreeView):$/;"	c
__gtype_name__	statements.py	/^    __gtype_name__ = "Statements"$/;"	v	class:Statements	file:
list_store	statements.py	/^    list_store = Template.Child("list_store")$/;"	v	class:Statements
wikidata	statements.py	/^    wikidata = Wikidata()   $/;"	v	class:Statements
__init__	statements.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:Statements
add	statements.py	/^    def add(self, cell_list):$/;"	m	class:Statements
site	test.py	/^site = Site('wikidata', 'wikidata')$/;"	v
repo	test.py	/^repo = site.data_repository()$/;"	v
item_page	test.py	/^item_page = ItemPage(repo, 'Q4115189')$/;"	v
data	test.py	/^data = item_page.get()$/;"	v
target_page	test.py	/^target_page = ItemPage(repo, 'Q17')$/;"	v
sf	triplet.py	/^from gi.repository.GObject import SignalFlags as sf$/;"	x
Triplet	triplet.py	/^class Triplet(Grid):$/;"	c
__gtype_name__	triplet.py	/^    __gtype_name__ = "Triplet"$/;"	v	class:Triplet	file:
__gsignals__	triplet.py	/^    __gsignals__ = {'triplet-ready':(sf.RUN_LAST,$/;"	v	class:Triplet	file:
subject	triplet.py	/^    subject = Template.Child("subject")$/;"	v	class:Triplet
subject_title	triplet.py	/^    subject_title = Template.Child("subject_title")$/;"	v	class:Triplet
subject_description	triplet.py	/^    subject_description = Template.Child("subject_description")$/;"	v	class:Triplet
property	triplet.py	/^    property = Template.Child("property")$/;"	v	class:Triplet
property_title	triplet.py	/^    property_title = Template.Child("property_title")$/;"	v	class:Triplet
property_description	triplet.py	/^    property_description = Template.Child("property_description")$/;"	v	class:Triplet
object	triplet.py	/^    object = Template.Child("object")$/;"	v	class:Triplet
object_title	triplet.py	/^    object_title = Template.Child("object_title")$/;"	v	class:Triplet
object_description	triplet.py	/^    object_description = Template.Child("object_description")$/;"	v	class:Triplet
__init__	triplet.py	/^    def __init__(self, variables=None, *args, **kwargs):$/;"	m	class:Triplet
entity_new_clicked_cb	triplet.py	/^    def entity_new_clicked_cb(self, popover, query):$/;"	m	class:Triplet
new_window_clicked_cb	triplet.py	/^    def new_window_clicked_cb(self, popover, entities):$/;"	m	class:Triplet
variable_deleted_cb	triplet.py	/^    def variable_deleted_cb(self, popover, entity):$/;"	m	class:Triplet
set_widget	triplet.py	/^    def set_widget(self, widget, entity):$/;"	m	class:Triplet
set_selected	triplet.py	/^    def set_selected(self, widget, value):$/;"	m	class:Triplet
widget_clicked_cb	triplet.py	/^    def widget_clicked_cb(self, widget):$/;"	m	class:Triplet
popover_closed_cb	triplet.py	/^    def popover_closed_cb(self, popover):$/;"	m	class:Triplet
default_variable_selected_cb	triplet.py	/^    def default_variable_selected_cb(self, popover, entity):$/;"	m	class:Triplet
object_selected_cb	triplet.py	/^    def object_selected_cb(self, popover, entity, emit=True):$/;"	m	class:Triplet
name	usersetup.py	/^name = 'ml.prevete.Daty'$/;"	v
UserSetup	usersetup.py	/^class UserSetup(Assistant):$/;"	c
__gtype_name__	usersetup.py	/^    __gtype_name__ = "UserSetup"$/;"	v	class:UserSetup	file:
credentials	usersetup.py	/^    credentials = Template.Child("credentials")$/;"	v	class:UserSetup
username	usersetup.py	/^    username = Template.Child("username")$/;"	v	class:UserSetup
username_label	usersetup.py	/^    username_label = Template.Child("username_label")$/;"	v	class:UserSetup
bot_username	usersetup.py	/^    bot_username = Template.Child("bot_username")$/;"	v	class:UserSetup
bot_username_label	usersetup.py	/^    bot_username_label = Template.Child("bot_username_label")$/;"	v	class:UserSetup
bot_password	usersetup.py	/^    bot_password = Template.Child("bot_password")$/;"	v	class:UserSetup
bot_password_label	usersetup.py	/^    bot_password_label = Template.Child("bot_password_label")$/;"	v	class:UserSetup
username_label2	usersetup.py	/^    username_label2 = Template.Child("username_label2")$/;"	v	class:UserSetup
bot_username_label2	usersetup.py	/^    bot_username_label2 = Template.Child("bot_username_label2")$/;"	v	class:UserSetup
__init__	usersetup.py	/^    def __init__(self, config, *args, **kwargs):$/;"	m	class:UserSetup
icon	usersetup.py	/^        icon = lambda x: IconTheme.get_default().load_icon((name), x, 0)$/;"	f	member:UserSetup.__init__	file:
update_header	usersetup.py	/^    def update_header(self, row, before, *args):$/;"	m	class:UserSetup
do_cancel	usersetup.py	/^    def do_cancel(self):$/;"	m	class:UserSetup
do_apply	usersetup.py	/^    def do_apply(self):$/;"	m	class:UserSetup
do_close	usersetup.py	/^    def do_close(self):$/;"	m	class:UserSetup
credentials_help_clicked_cb	usersetup.py	/^    def credentials_help_clicked_cb(self, widget):$/;"	m	class:UserSetup
on_field_changed	usersetup.py	/^    def on_field_changed(self, widget):$/;"	m	class:UserSetup
on_field_activate	usersetup.py	/^    def on_field_activate(self, widget):$/;"	m	class:UserSetup
cp	value.py	/^from copy import deepcopy as cp$/;"	x
sf	value.py	/^from gi.repository.GObject import SignalFlags as sf$/;"	x
Value	value.py	/^class Value(Grid):$/;"	c
__gtype_name__	value.py	/^    __gtype_name__ = "Value"$/;"	v	class:Value	file:
__gsignals__	value.py	/^    __gsignals__ = {'entity-editing':(sf.RUN_LAST,$/;"	v	class:Value	file:
button	value.py	/^    button = Template.Child("button")$/;"	v	class:Value
actions	value.py	/^    actions = Template.Child("actions")$/;"	v	class:Value
icon	value.py	/^    icon = Template.Child("icon")$/;"	v	class:Value
qualifiers	value.py	/^    qualifiers = Template.Child("qualifiers")$/;"	v	class:Value
mainsnak	value.py	/^    mainsnak = Template.Child("mainsnak")$/;"	v	class:Value
qualifier_new	value.py	/^    qualifier_new = Template.Child("qualifier_new")$/;"	v	class:Value
reference_new	value.py	/^    reference_new = Template.Child("reference_new")$/;"	v	class:Value
__init__	value.py	/^    def __init__(self, claim, *args, new=False, **kwargs):$/;"	m	class:Value
object_new_focus_in_event_cb	value.py	/^    def object_new_focus_in_event_cb(self, object, event):$/;"	m	class:Value
get_grid_rows	value.py	/^    def get_grid_rows(self, grid):$/;"	m	class:Value
object_new_icon_press_cb	value.py	/^    def object_new_icon_press_cb(self, entry, icon_pos, event, position):$/;"	m	class:Value
qualifier_new_check	value.py	/^    def qualifier_new_check(self, property):$/;"	m	class:Value
object_new_selected_cb	value.py	/^    def object_new_selected_cb(self, popover, property):$/;"	m	class:Value
object_new_focus_out_event_cb	value.py	/^    def object_new_focus_out_event_cb(self, object, event):$/;"	m	class:Value
entity_leaving_cb	value.py	/^    def entity_leaving_cb(self, entity, popover):$/;"	m	class:Value
new_window_clicked_cb	value.py	/^    def new_window_clicked_cb(self, entity, payload):$/;"	m	class:Value
clicked_cb	value.py	/^    def clicked_cb(self, widget, event):$/;"	m	class:Value
reference_new_clicked_cb	value.py	/^    def reference_new_clicked_cb(self, widget, event):$/;"	m	class:Value
references_expand_clicked_cb	value.py	/^    def references_expand_clicked_cb(self, widget, event):$/;"	m	class:Value
init_references	value.py	/^    def init_references(self):$/;"	m	class:Value
load_reference	value.py	/^    def load_reference(self, URI, property, error, i, widget, refs):$/;"	m	class:Value
load_qualifier	value.py	/^    def load_qualifier(self, URI, qualifier, error, i, claims):$/;"	m	class:Value
on_value_complete	value.py	/^    def on_value_complete(self, URI, snak, grid, row):$/;"	m	class:Value
entity_editing_cb	value.py	/^    def entity_editing_cb(self, entity, popover):$/;"	m	class:Value
load_async	value.py	/^    def load_async(self, callback, *cb_args):#URI, claim, j):$/;"	m	class:Value
do_call	value.py	/^        def do_call():$/;"	f	member:Value.load_async	file:
object_selected_cb	value.py	/^    def object_selected_cb(self, entity, target, claim):$/;"	m	class:Value
set_font_deprecated	value.py	/^    def set_font_deprecated(self, editor_widget):$/;"	m	class:Value
set_references	value.py	/^    def set_references(self):$/;"	m	class:Value
set_expanded	value.py	/^    def set_expanded(self):$/;"	m	class:Value
sf	values.py	/^from gi.repository.GObject import SignalFlags as sf$/;"	x
Values	values.py	/^class Values(ListBox):$/;"	c
__gtype_name__	values.py	/^    __gtype_name__ = "Values"$/;"	v	class:Values	file:
__gsignals__	values.py	/^    __gsignals__ = {'reference-toggled':(sf.RUN_LAST,$/;"	v	class:Values	file:
__init__	values.py	/^    def __init__(self, *args, frame=True, **kwargs):$/;"	m	class:Values
update_header	values.py	/^    def update_header(self, row, before, *args):$/;"	m	class:Values
add	values.py	/^    def add(self, widget):$/;"	m	class:Values
add_new	values.py	/^    def add_new():$/;"	m	class:Values
references_toggled_cb	values.py	/^    def references_toggled_cb(self, widget, child):$/;"	m	class:Values
f	values.py	/^        def f(reference):$/;"	f	member:Values.references_toggled_cb	file:
copy	wikidata.py	/^from copy import deepcopy as copy$/;"	x
Wikidata	wikidata.py	/^class Wikidata:$/;"	c
__init__	wikidata.py	/^    def __init__(self, verbose=False):$/;"	m	class:Wikidata
select	wikidata.py	/^    def select(self, var, statements, keep_data=False):$/;"	m	class:Wikidata
download	wikidata.py	/^    def download(self, URI, use_cache=True, target=None, debug=True, language='en'):$/;"	m	class:Wikidata
edit	wikidata.py	/^    def edit(self, URI, claim, target):$/;"	m	class:Wikidata
get_label	wikidata.py	/^    def get_label(self, entity, language='en'):$/;"	m	class:Wikidata
get_description	wikidata.py	/^    def get_description(self, entity, language='en'):$/;"	m	class:Wikidata
entity_search	wikidata.py	/^    def entity_search(self, query, entity):$/;"	m	class:Wikidata
search	wikidata.py	/^    def search(self, query, filters=[], verbose=False):$/;"	m	class:Wikidata
cp	util.py	/^from copy import deepcopy as cp$/;"	x
pickle_load	util.py	/^from pickle import load as pickle_load$/;"	x
threadLimiter	util.py	/^threadLimiter = BoundedSemaphore(4)$/;"	v
MyThread	util.py	/^class MyThread(Thread):$/;"	c
run	util.py	/^    def run(self):$/;"	m	class:MyThread
EntitySet	util.py	/^class EntitySet(list):$/;"	c
__init__	util.py	/^    def __init__(self, triplet=False):$/;"	m	class:EntitySet
add	util.py	/^    def add(self, element):$/;"	m	class:EntitySet
save	util.py	/^def save(variable, path):$/;"	f
load	util.py	/^def load(path):$/;"	f
chmod_recursively	util.py	/^def chmod_recursively(path, mode=0o755):$/;"	f
label_color	util.py	/^def label_color(label, text=None, color='#e5a50a', bold=False):$/;"	f
pango_label	util.py	/^def pango_label(label, weight=""):$/;"	f
set_text	util.py	/^def set_text(widget, text, tooltip, markup=False):$/;"	f
set_style	util.py	/^def set_style(context, resource, style_class, enable):$/;"	f
add_accelerator	util.py	/^def add_accelerator(accelerators, widget, accelerator, signal="activate"):$/;"	f
mkdirs	util.py	/^def mkdirs(newdir, mode=0o755):$/;"	f
async_call	util.py	/^def async_call(f, on_done):$/;"	f
on_done	util.py	/^    on_done = lambda r, e: None$/;"	f	function:async_call	file:
do_call	util.py	/^  def do_call():$/;"	f	function:async_call	file:
async_function	util.py	/^def async_function(on_done = None):$/;"	f
wrapper	util.py	/^  def wrapper(f):$/;"	f	function:async_function	file:
run	util.py	/^    def run(*args, **kwargs):$/;"	f	function:async_function.wrapper	file:
async_method	util.py	/^def async_method(on_done = None):$/;"	f
on_done	util.py	/^    on_done = lambda s, r, e: None$/;"	f	function:async_method	file:
wrapper	util.py	/^  def wrapper(f):$/;"	f	function:async_method	file:
run	util.py	/^    def run(self, *args, **kwargs):$/;"	f	function:async_method.wrapper	file:
download	util.py	/^def download(entity, callback, *cb_args, wikidata=None, use_cache=False, **kwargs):$/;"	f
do_call	util.py	/^    def do_call():$/;"	f	function:download	file:
get_title	util.py	/^def get_title(url, callback, *cb_args, **kwargs):$/;"	f
do_call	util.py	/^    def do_call():$/;"	f	function:get_title	file:
download_light	util.py	/^def download_light(URI, callback, *cb_args, wikidata=None, target=["Label", "Description"]):$/;"	f
do_call	util.py	/^    def do_call():$/;"	f	function:download_light	file:
edit	util.py	/^def edit(URI, claim, target, callback, *cb_args, wikidata=None):$/;"	f
do_call	util.py	/^    def do_call():$/;"	f	function:edit	file:
search	util.py	/^def search(query, callback, *cb_args, wikidata=None, filters=[], **kwargs):$/;"	f
do_call	util.py	/^    def do_call():$/;"	f	function:search	file:
select	util.py	/^def select(var, statements, callback, *cb_args, wikidata=None, **kwargs):$/;"	f
do_call	util.py	/^    def do_call():$/;"	f	function:select	file:
